# Uncomment this line to define a global platform for your project
platform :ios, '15.0'

# CocoaPods analytics send network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# Chemin vers Flutter
flutter_application_path = File.expand_path('..', __dir__)
eval(File.read(File.join(flutter_application_path, '.flutter-plugins-dependencies')))

require File.expand_path(File.join('..', 'Flutter', 'podhelper.rb'), __FILE__)

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  # üîπ Important : charge les pods Flutter
  flutter_ios_podfile_setup

  # ‚úÖ S√©curisation de Generated.xcconfig
  generated_xcode_build_settings_path = File.join('Flutter', 'Generated.xcconfig')
  unless File.exist?(generated_xcode_build_settings_path)
    puts "‚ö†Ô∏è  Warning: #{generated_xcode_build_settings_path} not found. Running flutter pub get..."
    system("flutter pub get")
  end

  if File.exist?(generated_xcode_build_settings_path)
    File.foreach(generated_xcode_build_settings_path) do |line|
      matches = line.match(/FLUTTER_ROOT=(.*)/)
      ENV['FLUTTER_ROOT'] = matches[1].strip if matches
    end
  else
    puts "‚ùå Still missing #{generated_xcode_build_settings_path}, check flutter configuration."
  end

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
  end
end
